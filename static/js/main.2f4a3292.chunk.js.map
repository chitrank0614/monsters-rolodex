{"version":3,"sources":["components/card/card.jsx","components/cardList/cardList.jsx","components/searchBox/searchBox.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","class","type","onChange","App","state","searchField","fetch","then","res","json","users","setState","this","filteredMonsters","filter","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6TAGaA,EAAO,SAACC,GACjB,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,YCHjBC,G,MAAW,SAACR,GACrB,OACI,qBAAKC,UAAU,YAAf,SACKD,EAAMS,SAASC,KAAI,SAACN,GACjB,OAAO,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCN7BM,G,MAAY,SAACX,GACtB,IAAQY,EAA8BZ,EAA9BY,YAAaC,EAAiBb,EAAjBa,aACrB,OACI,8BACI,uBAAOC,MAAM,SAASC,KAAK,SAASH,YAAaA,EAAaI,SAAUH,QC8BrEI,G,wDA7BX,aAAe,IAAD,8BACV,gBACKC,MAAQ,CACTT,SAAU,GACVU,YAAa,IAJP,E,qDAQd,WAAqB,IAAD,OAChBC,MAAM,8CACDC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAAD,OAAW,EAAKC,SAAS,CAAEhB,SAAUe,S,oBAGnD,WAAU,IAAD,OACL,EAAkCE,KAAKR,MAA/BT,EAAR,EAAQA,SAAUU,EAAlB,EAAkBA,YACZQ,EAAmBlB,EAASmB,QAAO,SAACxB,GACtC,OAAOA,EAAQE,KAAKuB,cAAcC,SAASX,EAAYU,kBAG3D,OACI,sBAAK5B,UAAU,MAAf,UACI,kDACA,cAAC,EAAD,CAAWW,YAAY,kBAAkBC,aAAc,SAACkB,GAAD,OAAO,EAAKN,SAAS,CAAEN,YAAaY,EAAEC,OAAOC,WACpG,cAAC,EAAD,CAAUxB,SAAUkB,W,GAzBlBO,cCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.2f4a3292.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./card.css\";\n\nexport const Card = (props) => {\n    return (\n        <div className=\"card-container\">\n            <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} />\n            <h2>{props.monster.name}</h2>\n            <p>{props.monster.email}</p>\n        </div>\n    );\n};\n","import React from \"react\";\nimport { Card } from \"./../card/card\";\n\nimport \"./cardList.css\";\n\nexport const CardList = (props) => {\n    return (\n        <div className=\"card-list\">\n            {props.monsters.map((monster) => {\n                return <Card key={monster.id} monster={monster} />;\n            })}\n        </div>\n    );\n};\n","import React from \"react\";\nimport \"./searchBox.css\";\n\nexport const SearchBox = (props) => {\n    const { placeholder, handleChange } = props;\n    return (\n        <div>\n            <input class=\"search\" type=\"search\" placeholder={placeholder} onChange={handleChange} />\n        </div>\n    );\n};\n","import React, { Component } from \"react\";\n\nimport { CardList } from \"./components/cardList/cardList\";\nimport { SearchBox } from \"./components/searchBox/searchBox\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n    constructor() {\n        super();\n        this.state = {\n            monsters: [],\n            searchField: \"\",\n        };\n    }\n\n    componentDidMount() {\n        fetch(\"https://jsonplaceholder.typicode.com/users\")\n            .then((res) => res.json())\n            .then((users) => this.setState({ monsters: users }));\n    }\n\n    render() {\n        const { monsters, searchField } = this.state;\n        const filteredMonsters = monsters.filter((monster) => {\n            return monster.name.toLowerCase().includes(searchField.toLowerCase());\n        });\n\n        return (\n            <div className=\"App\">\n                <h1>Monsters Rolodex</h1>\n                <SearchBox placeholder=\"Search Monsters\" handleChange={(e) => this.setState({ searchField: e.target.value })} />\n                <CardList monsters={filteredMonsters} />\n            </div>\n        );\n    }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}